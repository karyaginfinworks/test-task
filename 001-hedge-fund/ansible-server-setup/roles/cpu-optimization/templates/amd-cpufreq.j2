#!/bin/bash
# CPU Frequency scaling configuration for AMD processors
# Generated by Ansible
# Note: This script is primarily for manual execution
# Ansible tasks handle most optimizations natively

# Set CPU governor for all cores
for cpu in /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor; do
    [ -f "$cpu" ] && echo "{{ cpu_governor }}" > "$cpu"
done

{% if cpu_min_freq != "auto" %}
# Set minimum frequency for all cores
for cpu in /sys/devices/system/cpu/cpu*/cpufreq/scaling_min_freq; do
    [ -f "$cpu" ] && echo "{{ cpu_min_freq }}" > "$cpu"
done
{% endif %}

{% if cpu_max_freq != "auto" %}
# Set maximum frequency for all cores
for cpu in /sys/devices/system/cpu/cpu*/cpufreq/scaling_max_freq; do
    [ -f "$cpu" ] && echo "{{ cpu_max_freq }}" > "$cpu"
done
{% endif %}

# AMD specific settings
if [ -f "/sys/devices/system/cpu/cpufreq/boost" ]; then
    {% if enable_turbo_boost %}
    # Enable AMD Boost
    echo 1 > /sys/devices/system/cpu/cpufreq/boost
    {% else %}
    # Disable AMD Boost
    echo 0 > /sys/devices/system/cpu/cpufreq/boost
    {% endif %}
fi

# AMD P-State specific settings
if [ -d "/sys/devices/system/cpu/amd_pstate" ]; then
    # Set AMD P-State mode to performance
    echo performance > /sys/devices/system/cpu/amd_pstate/status
fi

# Set AMD specific performance settings
if [ -f "/proc/sys/kernel/sched_energy_aware" ]; then
    echo 0 > /proc/sys/kernel/sched_energy_aware
fi

echo "AMD CPU optimization completed"
